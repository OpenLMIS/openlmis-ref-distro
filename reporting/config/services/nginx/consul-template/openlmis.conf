{{ $loaded_services := services }}
{{ $resources := tree (env "RESOURCES_PATH") }}

server_names_hash_bucket_size 128;

{{ range $loaded_services }}
{{- if in .Tags (env "SERVICE_TAG") -}}
{{- $current_service := service .Name "any" -}}
{{- if not (eq (len $current_service) 0) }}
upstream {{ .Name }} {
  least_conn;
  keepalive 128;
  {{ range $current_service }}server {{ .Address }}:{{ .Port }};
{{ end }}
}
{{ end -}}
{{- end -}}
{{ end }}

log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                 '"$request" $status $body_bytes_sent '
                 '"$http_referer" "$http_user_agent" '
                 '$request_time $upstream_connect_time '
                 '$upstream_header_time $upstream_response_time '
                 '$pipe';

{{ range $resources }} {{ $location := .Key }} {{ $locationData := .Value | parseJSON }}
server {
  server_name {{ $location }};
  listen 80;

{{ if $locationData.enable_ssl }}
  return 301 https://$server_name$request_uri;
{{ else }}
{{ if (and ($locationData.behind_load_balancer) ($locationData.redirect_http_traffic)) }}
  if ($http_X_Forwarded_Proto = "http") {
    return 301 https://$server_name$request_uri;
  }
{{ end }}
  location / {
    proxy_pass http://{{ $locationData.upstream }};
    {{ if not $locationData.behind_load_balancer }}
      proxy_set_header X-ProxyScheme http;
      proxy_set_header X-Forwarded-Proto http;
      proxy_set_header X-ProxyPort 80;
    {{ end }}
    proxy_set_header X-ProxyHost {{ $location }};
    proxy_set_header Host {{ $location }};
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-ProxyContextPath /;
{{ if $locationData.enable_basic_auth }}
    auth_basic "Authentication Required";
    auth_basic_user_file /etc/nginx/.htpasswd;
{{ end }}
  }
{{ end }}
}

{{ if $locationData.enable_ssl }}
server {
  server_name {{ $location }};

  location / {
    proxy_pass http://{{ $locationData.upstream }};
    proxy_set_header X-ProxyScheme https;
    proxy_set_header X-ProxyHost {{ $location }};
    proxy_set_header Host {{ $location }};
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-ProxyPort 443;
    proxy_set_header X-ProxyContextPath /;
{{ if $locationData.enable_basic_auth }}
    auth_basic "Authentication Required";
    auth_basic_user_file /etc/nginx/.htpasswd;
{{ end }}
  }

  listen 443;
  ssl on;
  ssl_certificate           {{ $locationData.ssl_cert }};
  ssl_certificate_key       {{ $locationData.ssl_key }};
  ssl_trusted_certificate   {{ $locationData.ssl_cert_chain }};
  ssl_protocols             TLSv1.2;
  ssl_ciphers               "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
  ssl_dhparam               /etc/ssl/certs/dhparam.pem;
  ssl_prefer_server_ciphers on;
  keepalive_timeout         70;
  ssl_session_cache         shared:SSL:10m;
  ssl_session_timeout       10m;
  add_header                Strict-Transport-Security 'max-age=15768000';
  ssl_stapling              on;
  ssl_session_cache         builtin:1000 shared:SSL:10m;
}
{{ end }}
{{ end }}
